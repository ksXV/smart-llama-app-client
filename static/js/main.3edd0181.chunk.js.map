{"version":3,"sources":["components/FaceRecognition/FaceRecognition.js","components/Profile/ProfileIcon.js","components/Navigation/Navigation.js","URL.js","components/Signin/Signin.js","components/Register/Register.js","components/Logo/llama.png","components/Logo/Logo.js","components/ImageLinkForm/ImageLinkForm.js","components/Rank/Rank.js","components/Profile/Profile.js","components/Modal/Modal.js","App.js","index.js"],"names":["FaceRecognition","imageUrl","boxes","className","id","alt","src","width","heigh","map","box","style","top","topRow","right","rightCol","bottom","bottomRow","left","leftCol","ProfileIcon","props","toggle","setState","dropdownOpen","state","Dropdown","isOpen","this","drop","DropdownToggle","tag","onClick","DropdownMenu","marginLeft","backgroundColor","DropdownItem","toggleModal","onRouteChange","React","Component","Navigation","isSignedIn","display","justifyContent","nodeURL","Signin","onEmailChange","event","signInEmail","target","value","onPasswordChange","signInPassword","saveAuthTokenInSessions","token","window","sessionStorage","setItem","onSubmitSignIn","fetch","method","headers","body","JSON","stringify","email","password","then","response","json","data","success","userId","Authorization","user","loadUser","catch","console","log","htmlFor","type","name","onChange","Register","onNameChange","Logo","options","max","height","paddingTop","llama","ImageLinkForm","onInputChange","onButtonSubmit","Rank","entries","Profile","onProfileUpdate","getItem","formInput","resp","status","onFormChange","age","pet","Date","joined","toLocaleDateString","placeholder","modalRoot","document","getElementById","Modal","el","createElement","appendChild","removeChild","ReactDOM","createPortal","children","initialState","input","route","isProfileOpen","App","calculateFaceLocation","image","Number","outputs","regions","face","clarifaiFace","region_info","bounding_box","left_col","top_row","right_col","bottom_row","displayFaceBox","count","Object","assign","err","render"],"mappings":"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","file":"static/js/main.3edd0181.chunk.js","sourcesContent":["import React from 'react';\r\nimport './FaceRecognition.css';\r\n\r\nconst FaceRecognition = ({ imageUrl, boxes }) => {\r\n  return (\r\n    <div className='center ma'>\r\n      <div className='absolute mt2'>\r\n        <img id='inputimage' alt='' src={imageUrl} width='500px' heigh='auto'/>\r\n        {boxes.map(box =>\r\n          <div key={`box${box.topRow}${box.rightCol}`}\r\n              className='bounding-box'\r\n              style={{top: box.topRow, right: box.rightCol, bottom: box.bottomRow, left: box.leftCol}}>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default FaceRecognition;","import React from 'react';\r\nimport { Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'reactstrap';\r\n\r\nclass ProfileIcon extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      dropdownOpen: false\r\n    };\r\n  }\r\n\r\n  toggle = () => {\r\n    this.setState({\r\n      dropdownOpen: !this.state.dropdownOpen\r\n    });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"pa4 tc\">\r\n               \r\n            <Dropdown isOpen={this.state.dropdownOpen} toggle={this.toggle} drop='left'>\r\n              <DropdownToggle\r\n                tag=\"span\"\r\n                onClick={this.toggle}\r\n                data-toggle=\"dropdown\"\r\n                aria-expanded={this.state.dropdownOpen}\r\n              >\r\n                <img\r\n                  src=\"http://tachyons.io/img/logo.jpg\"\r\n                  className=\"br-100 h3 w3 dib\" alt=\"avatar\" />\r\n              </DropdownToggle>\r\n              {/* Old <DropdownMenu className='b--transparent shadow-5' style={{marginTop: '20px', backgroundColor: 'rgba(255, 255, 255, 0.5)'}} right> */}\r\n              <DropdownMenu className='b--transparent shadow-5' style={{marginLeft: '-6rem', backgroundColor: 'rgba(255, 255, 255, 0.5)'}} >\r\n                <DropdownItem onClick={() => this.props.toggleModal()}>View Profile</DropdownItem>\r\n                <DropdownItem onClick={() => this.props.onRouteChange('signout')}>Sign Out</DropdownItem>\r\n              </DropdownMenu>\r\n            </Dropdown>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default ProfileIcon;","import React from 'react';\r\nimport ProfileIcon from '../Profile/ProfileIcon';\r\n\r\nconst Navigation = ({ onRouteChange, isSignedIn, toggleModal }) => {\r\n    if (isSignedIn) {\r\n      return (\r\n        <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n          <ProfileIcon onRouteChange={onRouteChange} toggleModal={toggleModal} />\r\n        </nav>\r\n      );\r\n    } else {\r\n      return (\r\n        <nav style={{display: 'flex', justifyContent: 'flex-end'}}>\r\n          <p onClick={() => onRouteChange('signin')} className='f3 link dim black underline pa3 pointer'>Sign In</p>\r\n          <p onClick={() => onRouteChange('register')} className='f3 link dim black underline pa3 pointer'>Register</p>\r\n        </nav>\r\n      );\r\n    }\r\n}\r\n\r\nexport default Navigation;","let nodeURL = \"\";\r\nif (process.env.NODE_ENV === \"development\") {\r\n  nodeURL = \"http://localhost:3000\";\r\n} else if (process.env.NODE_ENV === \"production\") {\r\n  nodeURL = \"https://smart-llama-app-node-server.herokuapp.com\";\r\n} else {\r\n  nodeURL = \"http://localhost:3000\";\r\n}\r\nexport default nodeURL;\r\n","import React from \"react\";\r\nimport nodeURL from \"../../URL\";\r\nimport \"./Signin.css\";\r\n\r\nclass Signin extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      signInEmail: \"\",\r\n      signInPassword: \"\",\r\n    };\r\n  }\r\n\r\n  onEmailChange = (event) => {\r\n    this.setState({ signInEmail: event.target.value });\r\n  };\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({ signInPassword: event.target.value });\r\n  };\r\n\r\n  saveAuthTokenInSessions = (token) => {\r\n    window.sessionStorage.setItem(\"token\", token);\r\n  };\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch(`${nodeURL}/signin`, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: this.state.signInEmail,\r\n        password: this.state.signInPassword,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data && data.success === \"true\") {\r\n          this.saveAuthTokenInSessions(data.token);\r\n          fetch(`${nodeURL}/profile/${data.userId}`, {\r\n            method: \"get\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: data.token,\r\n            },\r\n          })\r\n            .then((response) => response.json())\r\n            .then((user) => {\r\n              if (user && user.email) {\r\n                this.props.loadUser(user);\r\n                this.props.onRouteChange(\"home\");\r\n              }\r\n            });\r\n        }\r\n      })\r\n      .catch(console.log);\r\n  };\r\n\r\n  render() {\r\n    const { onRouteChange } = this.props;\r\n    return (\r\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 black-80\">\r\n          <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f1 fw6 ph0 mh0\">Sign In</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 hover-black\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                  onChange={this.onEmailChange}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 hover-black\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.onPasswordChange}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                onClick={this.onSubmitSignIn}\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Sign in\"\r\n              />\r\n            </div>\r\n            <div className=\"lh-copy mt3\">\r\n              <p\r\n                onClick={() => onRouteChange(\"register\")}\r\n                className=\"f6 link dim black db pointer\"\r\n              >\r\n                Register\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signin;\r\n","import React from \"react\";\r\nimport nodeURL from \"../../URL\";\r\nimport \"./Register.css\";\r\n\r\nclass Register extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      email: \"\",\r\n      password: \"\",\r\n      name: \"\",\r\n    };\r\n  }\r\n\r\n  onNameChange = (event) => {\r\n    this.setState({ name: event.target.value });\r\n  };\r\n\r\n  onEmailChange = (event) => {\r\n    this.setState({ email: event.target.value });\r\n  };\r\n\r\n  onPasswordChange = (event) => {\r\n    this.setState({ password: event.target.value });\r\n  };\r\n\r\n  onSubmitSignIn = () => {\r\n    fetch(`${nodeURL}/register`, {\r\n      method: \"post\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify({\r\n        email: this.state.email,\r\n        password: this.state.password,\r\n        name: this.state.name,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((data) => {\r\n        if (data && data.success === \"true\") {\r\n          this.saveAuthTokenInSessions(data.token);\r\n          fetch(`${nodeURL}/profile/${data.userId}`, {\r\n            method: \"get\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: data.token,\r\n            },\r\n          })\r\n            .then((response) => response.json())\r\n            .then((user) => {\r\n              if (user && user.email) {\r\n                this.props.loadUser(user);\r\n                this.props.onRouteChange(\"home\");\r\n              }\r\n            });\r\n        }\r\n      });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <article className=\"br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center\">\r\n        <main className=\"pa4 black-80\">\r\n          <div className=\"measure\">\r\n            <fieldset id=\"sign_up\" className=\"ba b--transparent ph0 mh0\">\r\n              <legend className=\"f1 fw6 ph0 mh0\">Register</legend>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"name\">\r\n                  Name\r\n                </label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 hover-black\"\r\n                  type=\"text\"\r\n                  name=\"name\"\r\n                  id=\"name\"\r\n                  onChange={this.onNameChange}\r\n                />\r\n              </div>\r\n              <div className=\"mt3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"email-address\">\r\n                  Email\r\n                </label>\r\n                <input\r\n                  className=\"pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 hover-black\"\r\n                  type=\"email\"\r\n                  name=\"email-address\"\r\n                  id=\"email-address\"\r\n                  onChange={this.onEmailChange}\r\n                />\r\n              </div>\r\n              <div className=\"mv3\">\r\n                <label className=\"db fw6 lh-copy f6\" htmlFor=\"password\">\r\n                  Password\r\n                </label>\r\n                <input\r\n                  className=\"b pa2 input-reset ba bg-transparent hover-bg-black hover-white w-100 hover-black\"\r\n                  type=\"password\"\r\n                  name=\"password\"\r\n                  id=\"password\"\r\n                  onChange={this.onPasswordChange}\r\n                />\r\n              </div>\r\n            </fieldset>\r\n            <div className=\"\">\r\n              <input\r\n                onClick={this.onSubmitSignIn}\r\n                className=\"b ph3 pv2 input-reset ba b--black bg-transparent grow pointer f6 dib\"\r\n                type=\"submit\"\r\n                value=\"Register\"\r\n              />\r\n            </div>\r\n          </div>\r\n        </main>\r\n      </article>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Register;\r\n","export default __webpack_public_path__ + \"static/media/llama.6d3dacee.png\";","import React from \"react\";\r\nimport Tilt from \"react-tilt\";\r\nimport llama from \"./llama.png\";\r\nimport \"./Logo.css\";\r\n\r\nconst Logo = () => {\r\n  return (\r\n    <div className=\"ma4 mt0\">\r\n      <Tilt\r\n        className=\"Tilt br2 shadow-2\"\r\n        options={{ max: 55 }}\r\n        style={{ height: 150, width: 150 }}\r\n      >\r\n        <div className=\"Tilt-inner pa3\">\r\n          <img style={{ paddingTop: \"5px\" }} alt=\"logo\" src={llama} />\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React from \"react\";\r\nimport \"./ImageLinkForm.css\";\r\n\r\nconst ImageLinkForm = ({ onInputChange, onButtonSubmit }) => {\r\n  return (\r\n    <div>\r\n      <p className=\"f3\">\r\n        {\"This Magic Llama will detect faces in your pictures. Git it a try.\"}\r\n      </p>\r\n      <div className=\"center\">\r\n        <div className=\"form center pa4 br3 shadow-5\">\r\n          <input\r\n            className=\"f4 pa2 w-70 center\"\r\n            type=\"tex\"\r\n            onChange={onInputChange}\r\n          />\r\n          <button\r\n            className=\"w-30 grow f4 link ph3 pv2 dib white bg-light-purple\"\r\n            onClick={onButtonSubmit}\r\n          >\r\n            Detect\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ImageLinkForm;\r\n","import React from 'react';\r\n\r\nconst Rank = ({ name, entries }) => {\r\n  return (\r\n    <div>\r\n      <div className='white f3'>\r\n        {`${name}, your current entry count is...`}\r\n      </div>\r\n      <div className='white f1'>\r\n        {entries}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Rank;","import React, { Component } from 'react';\r\nimport './Profile.css';\r\n\r\nclass Profile extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n    this.state = {\r\n      name: this.props.user.name,\r\n      age: this.props.user.age,\r\n      pet: this.props.user.pet\r\n    }\r\n  }\r\n\r\n  onProfileUpdate = (data) => {\r\n    fetch(`http://localhost:3000/profile/${this.props.user.id}`, {\r\n      method: 'post',\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': window.sessionStorage.getItem('token')\r\n      },\r\n      body: JSON.stringify({\r\n        formInput: data\r\n      })\r\n    }).then(resp => {\r\n      if (resp.status === 200 || resp.status === 304) {\r\n        this.props.toggleModal();\r\n        this.props.loadUser({ ...this.props.user, ...data });\r\n      }\r\n    }).catch(console.log)\r\n  }\r\n\r\n  onFormChange = (event) => {\r\n    switch(event.target.name) {\r\n      case 'user-name':\r\n        this.setState({name: event.target.value})\r\n        break;\r\n      case 'user-age':\r\n        this.setState({age: event.target.value})\r\n        break;\r\n      case 'user-pet':\r\n        this.setState({pet: event.target.value})\r\n        break;\r\n      default:\r\n        return;\r\n    }\r\n  }\r\n\r\n  render() {\r\n    const { toggleModal, user } = this.props\r\n    const { name, age, pet } = this.state;\r\n    return (\r\n      <div className='profile-modal'>\r\n        <article className='br3 ba b--black-10 mv4 w-100 w-50-m w-25-l mw6 shadow-5 center bg-white'>\r\n          <main className='pa4 black-80 w-80'>\r\n            <img\r\n              src='http://tachyons.io/img/logo.jpg'\r\n              className='h3 w3 dib' alt='avatar'\r\n            />\r\n            <h1>{name}</h1>\r\n            <h4>{`Images submitted: ${user.entries}`}</h4>\r\n            <p>{`Member since: ${new Date(user.joined).toLocaleDateString()}`}</p>\r\n            <hr />\r\n            <label className='mt2 fw6' htmlFor='user-name'>Name:</label>\r\n            <input onChange={this.onFormChange} type='text' name='user-name' className='pa2 ba w-100' placeholder={name}></input>\r\n            <label className='mt2 fw6' htmlFor='user-age'>Age:</label>\r\n            <input onChange={this.onFormChange} type='text' name='user-age' className='pa2 ba w-100' placeholder={age}></input>\r\n            <label className='mt2 fw6' htmlFor='user-pet'>Favourite Pet:</label>\r\n            <input onChange={this.onFormChange} type='text' name='user-pet' className='pa2 ba w-100' placeholder={pet}></input>\r\n            <div className='mt4' style={{ display: 'flex', justifyContent: 'space-evenly'}}>\r\n              <button className='b pa2 grow pointer hover-white w-40 bg-light-blue b--black-20'\r\n                onClick={() => this.onProfileUpdate({name, age, pet})}>\r\n                Save\r\n              </button>\r\n              <button className='b pa2 grow pointer hover-white w-40 bg-light-red b--black-20'\r\n                onClick={toggleModal}>\r\n                Cancel\r\n              </button>\r\n            </div>\r\n\r\n          </main>\r\n          <div className='modal-close' onClick={toggleModal}>\r\n            &times;\r\n          </div>\r\n        </article>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Profile;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './Modal.css';\r\n\r\nconst modalRoot = document.getElementById('modal-root');\r\n\r\nclass Modal extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.el = document.createElement('div');\r\n  }\r\n\r\n  componentDidMount() {\r\n    // The portal element is inserted in the DOM tree after\r\n    // the Modal's children are mounted, meaning that children\r\n    // will be mounted on a detached DOM node. If a child\r\n    // component requires to be attached to the DOM tree\r\n    // immediately when mounted, for example to measure a\r\n    // DOM node, or uses 'autoFocus' in a descendant, add\r\n    // state to Modal and only render the children when Modal\r\n    // is inserted in the DOM tree.\r\n    modalRoot.appendChild(this.el);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    modalRoot.removeChild(this.el);\r\n  }\r\n\r\n  render() {\r\n    return ReactDOM.createPortal(\r\n      this.props.children,\r\n      this.el,\r\n    );\r\n  }\r\n}\r\n\r\nexport default Modal;","import React, { Component } from \"react\";\r\nimport Particles from \"react-particles-js\";\r\nimport FaceRecognition from \"./components/FaceRecognition/FaceRecognition\";\r\nimport Navigation from \"./components/Navigation/Navigation\";\r\nimport Signin from \"./components/Signin/Signin\";\r\nimport Register from \"./components/Register/Register\";\r\nimport Logo from \"./components/Logo/Logo\";\r\nimport ImageLinkForm from \"./components/ImageLinkForm/ImageLinkForm\";\r\nimport Rank from \"./components/Rank/Rank\";\r\nimport Profile from \"./components/Profile/Profile\";\r\nimport Modal from \"./components/Modal/Modal\";\r\nimport nodeURL from \"./URL\";\r\nimport \"./App.css\";\r\n\r\nconst particlesOptions = {\r\n  //customize to your own liking\r\n  particles: {\r\n    number: {\r\n      value: 30,\r\n      density: {\r\n        enable: true,\r\n        value_area: 800,\r\n      },\r\n    },\r\n  },\r\n};\r\n\r\nconst initialState = {\r\n  input: \"\",\r\n  imageUrl: \"\",\r\n  boxes: [],\r\n  route: \"signin\",\r\n  isProfileOpen: false,\r\n  isSignedIn: false,\r\n  user: {\r\n    id: \"\",\r\n    name: \"\",\r\n    email: \"\",\r\n    entries: 0,\r\n    joined: \"\",\r\n    age: 0,\r\n    pet: \"\",\r\n  },\r\n};\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = initialState;\r\n  }\r\n\r\n  componentDidMount() {\r\n    const token = window.sessionStorage.getItem(\"token\");\r\n    if (token) {\r\n      fetch(`${nodeURL}/signin`, {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n          Authorization: token,\r\n        },\r\n      })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          if (data && data.id) {\r\n            fetch(`${nodeURL}//profile/${data.id}`, {\r\n              method: \"GET\",\r\n              headers: {\r\n                \"Content-Type\": \"application/json\",\r\n                Authorization: token,\r\n              },\r\n            })\r\n              .then((response) => response.json())\r\n              .then((user) => {\r\n                if (user && user.email) {\r\n                  this.loadUser(user);\r\n                  this.onRouteChange(\"home\");\r\n                }\r\n              });\r\n          }\r\n        })\r\n        .catch(console.log);\r\n    }\r\n  }\r\n\r\n  loadUser = (data) => {\r\n    console.log(data);\r\n    this.setState({\r\n      user: {\r\n        id: data.id,\r\n        name: data.name,\r\n        email: data.email,\r\n        entries: data.entries,\r\n        joined: data.joined,\r\n      },\r\n    });\r\n  };\r\n\r\n  calculateFaceLocation = (data) => {\r\n    const image = document.getElementById(\"inputimage\");\r\n    const width = Number(image.width);\r\n    const height = Number(image.height);\r\n    return data.outputs[0].data.regions.map((face) => {\r\n      const clarifaiFace = face.region_info.bounding_box;\r\n      return {\r\n        leftCol: clarifaiFace.left_col * width,\r\n        topRow: clarifaiFace.top_row * height,\r\n        rightCol: width - clarifaiFace.right_col * width,\r\n        bottomRow: height - clarifaiFace.bottom_row * height,\r\n      };\r\n    });\r\n  };\r\n\r\n  displayFaceBox = (boxes) => {\r\n    this.setState({ boxes: boxes });\r\n  };\r\n\r\n  onInputChange = (event) => {\r\n    this.setState({ input: event.target.value });\r\n  };\r\n\r\n  onButtonSubmit = () => {\r\n    this.setState({ imageUrl: this.state.input });\r\n    fetch(`${nodeURL}/imageurl`, {\r\n      method: \"post\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        Authorization: window.sessionStorage.getItem(\"token\"),\r\n      },\r\n      body: JSON.stringify({\r\n        input: this.state.input,\r\n      }),\r\n    })\r\n      .then((response) => response.json())\r\n      .then((response) => {\r\n        if (response) {\r\n          fetch(`${nodeURL}/image`, {\r\n            method: \"put\",\r\n            headers: {\r\n              \"Content-Type\": \"application/json\",\r\n              Authorization: window.sessionStorage.getItem(\"token\"),\r\n            },\r\n            body: JSON.stringify({\r\n              id: this.state.user.id,\r\n            }),\r\n          })\r\n            .then((response) => response.json())\r\n            .then((count) => {\r\n              this.setState(\r\n                Object.assign(this.state.user, { entries: count.entries })\r\n              );\r\n            })\r\n            .catch(console.log);\r\n        }\r\n        this.displayFaceBox(this.calculateFaceLocation(response));\r\n      })\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  onRouteChange = (route) => {\r\n    if (route === \"signout\") {\r\n      return this.setState(initialState);\r\n    } else if (route === \"home\") {\r\n      this.setState({ isSignedIn: true });\r\n    }\r\n    this.setState({ route: route });\r\n  };\r\n\r\n  toggleModal = () => {\r\n    this.setState((state) => ({\r\n      ...state,\r\n      isProfileOpen: !state.isProfileOpen,\r\n    }));\r\n  };\r\n\r\n  render() {\r\n    const { isSignedIn, imageUrl, route, boxes, isProfileOpen, user } =\r\n      this.state;\r\n    return (\r\n      <div className=\"App\">\r\n        {/* <Particles className=\"particles\" params={particlesOptions} /> */}\r\n        <Navigation\r\n          isSignedIn={isSignedIn}\r\n          onRouteChange={this.onRouteChange}\r\n          toggleModal={this.toggleModal}\r\n        />\r\n        {isProfileOpen && (\r\n          <Modal>\r\n            <Profile\r\n              isProfileOpen={isProfileOpen}\r\n              toggleModal={this.toggleModal}\r\n              user={user}\r\n              loadUser={this.loadUser}\r\n            />\r\n          </Modal>\r\n        )}\r\n        {route === \"home\" ? (\r\n          <div>\r\n            <Logo />\r\n            <Rank\r\n              name={this.state.user.name}\r\n              entries={this.state.user.entries}\r\n            />\r\n            <ImageLinkForm\r\n              onInputChange={this.onInputChange}\r\n              onButtonSubmit={this.onButtonSubmit}\r\n            />\r\n            <FaceRecognition boxes={boxes} imageUrl={imageUrl} />\r\n          </div>\r\n        ) : route === \"signin\" ? (\r\n          <Signin loadUser={this.loadUser} onRouteChange={this.onRouteChange} />\r\n        ) : (\r\n          <Register\r\n            loadUser={this.loadUser}\r\n            onRouteChange={this.onRouteChange}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './App';\r\n// import registerServiceWorker from './registerServiceWorker';\r\n\r\nimport 'bootstrap/dist/css/bootstrap.css';\r\nimport 'tachyons';\r\nimport './index.css';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n// registerServiceWorker();\r\n"],"sourceRoot":""}